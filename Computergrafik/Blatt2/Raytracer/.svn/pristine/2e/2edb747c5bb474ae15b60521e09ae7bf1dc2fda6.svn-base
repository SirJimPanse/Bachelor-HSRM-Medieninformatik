'''
Created on 12.04.2013

@author: tland001
'''
import math
from ray import Ray
class Sphere(object):
    def __init__(self, center, radius):
        self.center = center # point
        self.radius = radius # scalar
        #self.color = color

    def __repr__(self):
        return 'Sphere(%s,%s)' % (repr(self.center), self.radius)

    def intersectionParameter(self, ray):
        co = self.center - ray.origin
        v = co.dot(ray.direction)
        discriminant = (self.radius * self.radius) - (co.dot(co) - v*v)
        if discriminant < 0:
            return None
        else:
            return v - math.sqrt(discriminant)

    def normalAt(self, p):
        return (p - self.center).normalized()
    
    #def colorAt(self,ray):
        